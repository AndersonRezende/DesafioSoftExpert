version: "3.8"
services:
  postgres:
    image: postgres
    restart: always
    env_file:
      - ./../web/.env
    environment:
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/data/postgres
      - ./database/dump:/docker-entrypoint-initdb.d
    networks:
      - postgres-db-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./etc/conf/pgadmin/servers.json:/pgadmin4/servers.json:ro
    ports:
      - "5050:80"
    networks:
      - postgres-db-network
    restart: unless-stopped

  php-fpm:
    container_name: php-fpm
    build:
      context: .
      dockerfile: ./etc/dockerfile/dockerfile_php_7
    restart: always
    volumes:
      - ../web/:/var/www/html
      - ./etc/conf/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/conf/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
    expose:
      - "9000"
    links:
      - postgres
    depends_on:
      - postgres
    networks:
      - postgres-db-network

  composer:
    image: composer
    volumes:
      - ../web/:/app/
    command: ["composer", "install"]

  nginx:
    build:
      context: .
      dockerfile: ./etc/dockerfile/dockerfile_nginx
    container_name: nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ../web:/var/www/html
      - ./etc/conf/nginx/default.conf:/etc/nginx/default.conf
      - ./etc/conf/nginx/nginx.conf:/etc/nginx/nginx.conf
    links:
      - postgres
    depends_on:
      - php-fpm
      - composer
    networks:
      - postgres-db-network

networks:
  postgres-db-network:
    driver: bridge

volumes:
  postgres-db-volume:
  pgadmin: